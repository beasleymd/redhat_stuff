---
- name: venafi_certificate_cloud
  hosts: localhost
  connection: local
  gather_facts: false
  become: true

  vars:
    venafi_api_key: "{{ venafi_api_key | default(lookup('env','VENAFI_APIKEY'), true) }}"
    venafi_zone: "{{ venafi_zone | default('MyApp\\Default') }}"
    common_name: "www.example.com"
    dns_sans:
      - "www.example.com"
      - "example.com"

    cert_dest_path:  "/etc/pki/tls/certs/{{ common_name }}.crt"
    chain_dest_path: "/etc/pki/tls/certs/{{ common_name }}-chain.crt"
    restart_handler: "restart nginx"

  pre_tasks:
    - name: Ensure cert directory exists
      ansible.builtin.file:
        path: "/etc/pki/tls/certs"
        state: directory
        mode: "0755"

  tasks:
    - name: Enroll/renew certificate via Venafi as a Service (service-side CSR)
      venafi.machine_identity.venafi_certificate:
        token: "{{ venafi_api_key }}"
        zone: "{{ venafi_zone }}"
        common_name: "{{ common_name }}"
        csr_origin: service                   # VaaS generates CSR/key

        # Set BOTH to dodge module-version alias quirks
        path: "{{ cert_dest_path }}"
        cert_path: "{{ cert_dest_path }}"

        chain_option: last
        chain_path: "{{ chain_dest_path }}"

        # SANs as comma-separated DNS entries
        alt_name: "{{ dns_sans | map('regex_replace','^(.*)$','DNS:\\1') | join(',') }}"

        unsafe_writes: true
      register: certout
      notify: "{{ restart_handler }}"

    - name: Show module result
      ansible.builtin.debug:
        var: certout

  handlers:
    - name: restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
